name: README Sync Check
description: Check README consistency and optionally create PR to fix divergence
inputs:
  github-token:
    description: GitHub token with contents:write and pull-requests:write permissions
    required: true
  create-pr:
    description: Whether to create a pull request when differences are found
    required: false
    default: 'true'
  branch-name:
    description: Branch name for the automation PR
    required: false
    default: 'automation/readme-sync'
outputs:
  changed:
    description: Whether README files diverged
    value: ${{ steps.detect.outputs.changed }}
  diff-path:
    description: Path to the diff file if changes detected
    value: ${{ steps.detect.outputs.diff-path }}
  pr-created:
    description: Whether a pull request was created
    value: ${{ steps.create-pr.outputs.pr-created }}
  pr-skipped:
    description: Whether PR creation was skipped due to existing PRs
    value: ${{ steps.guard.outputs.skipped }}

runs:
  using: composite
  steps:
  - name: Detect README divergence
    id: detect
    shell: bash
    run: |
      set -euo pipefail
      : > readme_diff.patch
      if diff -u README.md npm/terminal-jarvis/README.md > readme_diff.tmp 2>&1; then
        echo "changed=false" >> "$GITHUB_OUTPUT"
        echo "diff-path=" >> "$GITHUB_OUTPUT"
        rm -f readme_diff.tmp readme_diff.patch
      else
        if [ "${PIPESTATUS[0]}" -eq 1 ]; then
          mv readme_diff.tmp readme_diff.patch
          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "diff-path=readme_diff.patch" >> "$GITHUB_OUTPUT"
        else
          echo "::error::Failed to compare README files"
          cat readme_diff.tmp || true
          exit 1
        fi
      fi

  - name: Sync README copies for PR
    if: steps.detect.outputs.changed == 'true' && inputs.create-pr == 'true'
    shell: bash
    run: |
      set -euo pipefail
      cp README.md npm/terminal-jarvis/README.md
      rm -f readme_diff.patch || true

  - name: Evaluate existing PRs
    if: steps.detect.outputs.changed == 'true' && inputs.create-pr == 'true'
    id: guard
    shell: bash
    env:
      GH_TOKEN: ${{ inputs.github-token }}
    run: |
      set -euo pipefail
      gh pr list --state open --json number,headRefName,title,url > pr_list.json
      total=$(jq 'length' pr_list.json)
      automation=$(jq '[.[] | select(.headRefName == "${{ inputs.branch-name }}")] | length' pr_list.json)

      if [ "$total" -gt 0 ] && [ "$automation" -lt "$total" ]; then
        echo "skipped=true" >> "$GITHUB_OUTPUT"
        echo "foreign-pr=true" >> "$GITHUB_OUTPUT"
      else
        echo "skipped=false" >> "$GITHUB_OUTPUT"
        echo "foreign-pr=false" >> "$GITHUB_OUTPUT"
      fi

      echo "total-prs=$total" >> "$GITHUB_OUTPUT"
      echo "automation-prs=$automation" >> "$GITHUB_OUTPUT"

  - name: Skip PR notice
    if: steps.detect.outputs.changed == 'true' && inputs.create-pr == 'true' && steps.guard.outputs.skipped == 'true'
    shell: bash
    run: |
      echo "::warning::README differences detected, but PR creation was skipped because another pull request is already open. Review the diff artifact and resolve the outstanding PR before re-running."

  - name: Create or update PR
    if: steps.detect.outputs.changed == 'true' && inputs.create-pr == 'true' && steps.guard.outputs.skipped == 'false'
    id: create-pr
    uses: peter-evans/create-pull-request@v6
    with:
      token: ${{ inputs.github-token }}
      branch: ${{ inputs.branch-name }}
      commit-message: "docs: synchronize README copies"
      title: "docs: synchronize README copies"
      body: |
        ## Summary
        - Align the root README and npm package README copies
        - Generated by the weekly repository maintenance workflow
        - Existing open pull requests: ${{ steps.guard.outputs.total-prs }}

        The workflow avoids opening additional pull requests when others are already active.
      labels: documentation, automation

  - name: Set PR creation output
    if: steps.detect.outputs.changed == 'true' && inputs.create-pr == 'true'
    shell: bash
    run: |
      if [ "${{ steps.guard.outputs.skipped }}" == "false" ]; then
        echo "pr-created=true" >> "$GITHUB_OUTPUT"
      else
        echo "pr-created=false" >> "$GITHUB_OUTPUT"
      fi

  - name: Cleanup temporary files
    if: always()
    shell: bash
    run: |
      rm -f pr_list.json readme_diff.tmp || true
