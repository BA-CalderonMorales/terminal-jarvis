# AI Tools Registry - Centralized configuration for all AI coding tools
# This file serves as the single source of truth for AI tool metadata,
# installation commands, and requirements.

[metadata]
version = "1.0.0"
description = "Terminal Jarvis AI Tools Registry"
last_updated = "2025-09-12"

# Claude - Anthropic's AI coding assistant
[tools.claude]
display_name = "claude"
config_key = "claude-code"
description = "Anthropic's Claude for code assistance"
homepage = "https://claude.ai/"
documentation = "https://docs.anthropic.com/claude/docs/claude-code"
cli_command = "claude"
requires_npm = true
requires_sudo = true

[tools.claude.install]
command = "npm"
args = ["install", "-g", "@anthropic-ai/claude-code"]

[tools.claude.update]
command = "npm"
args = ["update", "-g", "@anthropic-ai/claude-code"]

[tools.claude.auth]
env_vars = ["ANTHROPIC_API_KEY", "CLAUDE_API_KEY"]
setup_url = "https://console.anthropic.com/"
browser_auth = true

# Gemini - Google's AI coding assistant
[tools.gemini]
display_name = "gemini"
config_key = "gemini-cli"
description = "Google's Gemini CLI tool"
homepage = "https://ai.google.dev/"
documentation = "https://ai.google.dev/docs"
cli_command = "gemini"
requires_npm = true
requires_sudo = true

[tools.gemini.install]
command = "npm"
args = ["install", "-g", "@google/gemini-cli"]

[tools.gemini.update]
command = "npm"
args = ["update", "-g", "@google/gemini-cli"]

[tools.gemini.auth]
env_vars = ["GOOGLE_API_KEY", "GEMINI_API_KEY"]
setup_url = "https://aistudio.google.com/app/apikey"
browser_auth = true

# Qwen - Alibaba's AI coding assistant
[tools.qwen]
display_name = "qwen"
config_key = "qwen-code"
description = "Qwen coding assistant"
homepage = "https://qwenlm.github.io/"
documentation = "https://github.com/QwenLM/Qwen"
cli_command = "qwen"
requires_npm = true
requires_sudo = true

[tools.qwen.install]
command = "npm"
args = ["install", "-g", "@qwen-code/qwen-code@latest"]

[tools.qwen.update]
command = "npm"
args = ["update", "-g", "@qwen-code/qwen-code"]

[tools.qwen.auth]
env_vars = ["QWEN_API_KEY"]
setup_url = "https://dashscope.aliyun.com/"
browser_auth = false

# OpenCode - Open source AI coding agent
[tools.opencode]
display_name = "opencode"
config_key = "opencode"
description = "OpenCode AI coding agent built for the terminal"
homepage = "https://opencode.ai/"
documentation = "https://docs.opencode.ai/"
cli_command = "opencode"
requires_npm = true
requires_sudo = true

[tools.opencode.install]
command = "npm"
args = ["install", "-g", "opencode-ai@latest"]

[tools.opencode.update]
command = "npm"
args = ["update", "-g", "opencode-ai"]

[tools.opencode.auth]
env_vars = ["OPENCODE_API_KEY", "OPENAI_API_KEY"]
setup_url = "https://platform.openai.com/api-keys"
browser_auth = false

# LLxprt - Multi-provider AI coding assistant
[tools.llxprt]
display_name = "llxprt"
config_key = "llxprt-code"
description = "LLxprt Code - Multi-provider AI coding assistant with enhanced features"
homepage = "https://llxprt.dev/"
documentation = "https://docs.llxprt.dev/"
cli_command = "llxprt"
requires_npm = true
requires_sudo = true

[tools.llxprt.install]
command = "npm"
args = ["install", "-g", "@vybestack/llxprt-code"]

[tools.llxprt.update]
command = "npm"
args = ["update", "-g", "@vybestack/llxprt-code"]

[tools.llxprt.auth]
env_vars = ["LLXPRT_API_KEY", "OPENAI_API_KEY"]
setup_url = "https://platform.openai.com/api-keys"
browser_auth = false

# Codex - OpenAI's AI coding assistant
[tools.codex]
display_name = "codex"
config_key = "codex"
description = "OpenAI Codex CLI - AI coding agent that runs locally"
homepage = "https://openai.com/codex"
documentation = "https://platform.openai.com/docs/guides/code"
cli_command = "codex"
requires_npm = true
requires_sudo = true

[tools.codex.install]
command = "npm"
args = ["install", "-g", "@openai/codex"]

[tools.codex.update]
command = "npm"
args = ["update", "-g", "@openai/codex"]

[tools.codex.auth]
env_vars = ["OPENAI_API_KEY", "CODEX_API_KEY"]
setup_url = "https://platform.openai.com/api-keys"
browser_auth = false

# Crush - Charm's multi-model AI coding assistant
[tools.crush]
display_name = "crush"
config_key = "crush"
description = "Charm's multi-model AI coding assistant with LSP support"
homepage = "https://charm.sh/crush"
documentation = "https://github.com/charmbracelet/crush"
cli_command = "crush"
requires_npm = true
requires_sudo = true

[tools.crush.install]
command = "npm"
args = ["install", "-g", "@charmland/crush"]

[tools.crush.update]
command = "npm"
args = ["update", "-g", "@charmland/crush"]

[tools.crush.auth]
env_vars = ["CHARM_API_KEY"]
setup_url = "https://charm.sh/account"
browser_auth = false