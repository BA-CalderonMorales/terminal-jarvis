{
  "name": "Terminal Jarvis Development",
  "image": "mcr.microsoft.com/devcontainers/rust:1-1-jammy",
  
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts",
      "nodeGypDependencies": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": true
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "rust-lang.rust-analyzer",
        "vadimcn.vscode-lldb",
        "serayuzgur.crates",
        "tamasfe.even-better-toml",
        "biomejs.biome",
        "ms-vscode.vscode-typescript-next",
        "GitHub.copilot",
        "GitHub.copilot-chat"
      ],
      "settings": {
        "rust-analyzer.cargo.loadOutDirsFromCheck": true,
        "rust-analyzer.procMacro.enable": true,
        "rust-analyzer.checkOnSave.command": "clippy",
        "rust-analyzer.checkOnSave.allTargets": true,
        "rust-analyzer.checkOnSave.allFeatures": true,
        "rust-analyzer.checkOnSave.extraArgs": ["--", "-D", "warnings"],
        "files.watcherExclude": {
          "**/target/**": true
        },
        "search.exclude": {
          "**/target": true,
          "**/Cargo.lock": true
        },
        "editor.formatOnSave": true
      }
    }
  },

  "onCreateCommand": [
    "bash",
    "-c", 
    "echo 'Adding Rust components...' && rustup component add clippy rustfmt rust-analyzer && echo 'Rust environment ready!'"
  ],

  "postCreateCommand": [
    "bash", 
    "-c",
    "echo 'Building project dependencies...' && cargo check && echo 'Installing NPM dependencies...' && cd npm/terminal-jarvis && npm install && echo 'Terminal Jarvis development environment ready! Try: cargo run -- --help'"
  ],

  "postStartCommand": [
    "bash",
    "-c",
    "echo 'Welcome to Terminal Jarvis development!' && echo 'Quick start commands:' && echo '  cargo check - Check compilation' && echo '  cargo run -- list - List AI tools' && echo '  cargo test - Run tests' && echo '  ./scripts/cicd/local-ci.sh - Run CI checks'"
  ],

  "remoteUser": "vscode",
  
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  "forwardPorts": [3000, 8000, 8080],
  "portsAttributes": {
    "3000": {
      "label": "Development Server",
      "onAutoForward": "silent"
    },
    "8000": {
      "label": "Local File Server",
      "onAutoForward": "silent"
    },
    "8080": {
      "label": "Alternative Server",
      "onAutoForward": "silent"
    }
  },

  "containerEnv": {
    "RUST_LOG": "debug",
    "CARGO_TERM_COLOR": "always",
    "CARGO_INCREMENTAL": "1",
    "RUST_BACKTRACE": "1"
  },

  "shutdownAction": "stopContainer",
  
  "waitFor": "postCreateCommand"
}
